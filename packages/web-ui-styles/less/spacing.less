@import './dev/mixins-noop.less';
@import './responsive.less';
@import './spec-system.less';

@import './spacing/margin-mixins.less';
@import './spacing/padding-mixins.less';
@import './spacing/vertical-spacing-system.less';

@ui--spacing-units:
  _name _     _,
  1     120px 80px,
  2     100px 70px,
  3     80px  60px,
  4     70px  50px,
  5     60px  40px,
  6     40px  30px,
  7     30px  15px,
  8     24px  24px,
  9     20px  20px,
  10    14px  14px,
  11    14px  9px,
  12    10px,
  13    8px;

//
// ATTENTION:
// This file duplicates SOME (NOT ALL) logic from spec-system.
//
// It does so in order to avoid cryptic variable naming conflicts
// due to Less variable scoping.
//
// As it duplicates code, the spacing system mechanism does not support
// all features from spec-system:
// - selector aliasing
// - custom property definition
//
// As this is mainly a language-related issue, the idea
// is to maintain the public API (@ui--spacing-units)
// format conformant to the common spec-system format,
// so that in the future the migration might be as transparent
// as possible.
//

//
// Applies a unit to the given property or ruleset
// We cannot use spec-system helper mixins due to recursion - variables
// end up overriden by recursive mixin calling.
//
// As an example: the vertical spacing system uses the spacing system
//
// TODO: investigate further and improve documentation
//
.mx__spacing-apply-unit(
  @__spacing-ruleset-or-property,
  @__spacing-unit-name,
  @important: false) {

  //
  // Loop through the spec list and attempt to match
  // the target spacing unit name
  //
  each(@ui--spacing-units, .(@__spacing-unit-spec) {

    //
    // Additional complexity (checking whether is ruleset or not)
    // was added in order to introduce debugging mechanism.
    //
    // This complexity may be removed in the future.
    //
    & when (extract(@__spacing-unit-spec, 1) = @__spacing-unit-name)
       and (isruleset(@__spacing-ruleset-or-property)) {
      .mx__responsive-viewport-indexed-property({
        @spacing-value-raw: @responsive-viewport-indexed-value-raw;
        @spacing-value: @responsive-viewport-indexed-value;

        @__spacing-ruleset-or-property();
      }, {
        min: if(
          length(@__spacing-unit-spec) > 2,
          extract(@__spacing-unit-spec, 3),
          extract(@__spacing-unit-spec, 2)
        );
        max: extract(@__spacing-unit-spec, 2);
      }, @important);
    }

    & when (extract(@__spacing-unit-spec, 1) = @__spacing-unit-name)
      and not (isruleset(@__spacing-ruleset-or-property)) {
      .mx__responsive-viewport-indexed-property({
        @{__spacing-ruleset-or-property}: @responsive-viewport-indexed-value;
        .mx__dev-log(
          @__spacing-ruleset-or-property @__spacing-unit-name,
          spacing,
          @important
        );
      }, {
        min: if(
          length(@__spacing-unit-spec) > 2,
          extract(@__spacing-unit-spec, 3),
          extract(@__spacing-unit-spec, 2)
        );
        max: extract(@__spacing-unit-spec, 2);
      }, @important);
    }
  });
}

.__spacing-classes-single-unit(@__spacing-unit-name, @value) {
  //
  // All sides
  //
  .m-@{__spacing-unit-name} {
    margin: @value !important;
  }
  .p-@{__spacing-unit-name} {
    padding: @value !important;
  }

  //
  // Vertical
  //
  .m-vertical-@{__spacing-unit-name} {
    margin-top: @value !important;
    margin-bottom: @value !important;
  }
  .p-vertical-@{__spacing-unit-name} {
    padding-top: @value !important;
    padding-bottom: @value !important;
  }

  //
  // Horizontal
  //
  .m-horizontal-@{__spacing-unit-name} {
    margin-left: @value !important;
    margin-right: @value !important;
  }
  .p-horizontal-@{__spacing-unit-name} {
    padding-left: @value !important;
    padding-right: @value !important;
  }

  //
  // Top
  //
  .m-top-@{__spacing-unit-name} {
    margin-top: @value !important;
  }
  .p-top-@{__spacing-unit-name} {
    padding-top: @value !important;
  }

  //
  // Bottom
  //
  .m-bottom-@{__spacing-unit-name} {
    margin-bottom: @value !important;
  }
  .p-bottom-@{__spacing-unit-name} {
    padding-bottom: @value !important;
  }

  //
  // Left
  //
  .m-left-@{__spacing-unit-name} {
    margin-left: @value !important;
  }
  .p-left-@{__spacing-unit-name} {
    padding-left: @value !important;
  }

  //
  // Right
  //
  .m-right-@{__spacing-unit-name} {
    margin-right: @value !important;
  }
  .p-right-@{__spacing-unit-name} {
    padding-right: @value !important;
  }
}

//
// Generates spacing rulesets
//
.mx__spacing() {
  each(@ui--spacing-units, .(@__spacing-unit-spec, @index) {
    // Skip the first row, as it should be treated
    // as the spec header
    & when (@index > 1) {
      .mx__responsive-viewport-indexed-property({
        .__spacing-classes-single-unit(
          extract(@__spacing-unit-spec, 1),
          @responsive-viewport-indexed-value
        );
      }, {
        min: if(
          length(@__spacing-unit-spec) > 2,
          extract(@__spacing-unit-spec, 3),
          extract(@__spacing-unit-spec, 2)
        );
        max: extract(@__spacing-unit-spec, 2);
      });
    }
  });

  .__spacing-classes-single-unit(0, 0);
}
