@import './responsive/private.less';
@import './responsive/viewport-indexed.less';

@ui--responsive-breakpoints: {
  xl-min: 1400px;
  lg-min: 992px;
  md-min: 768px;
  sm-min: 576px;
}

@ui--responsive-viewport-indexed-default-rem-value: 16;
@ui--responsive-viewport-indexed-default-breakpoints: {
  min: @ui--responsive-breakpoints[sm-min];
  max: @ui--responsive-breakpoints[lg-min];
}
@ui--responsive-viewport-indexed-default-breakpoint-min: @ui--responsive-breakpoints[sm-min];
@ui--responsive-viewport-indexed-default-breakpoint-max: @ui--responsive-breakpoints[lg-min];

//
// Breakpoint mixins
//
.mx__media-breakpoint(@media-property, @value, @before-styles, @after-styles) when (@media-property = width) {
  @media (max-width: @value - 1px) {
    @before-styles();
  }

  @media (min-width: @value) {
    @after-styles();
  }
}

.mx__media-breakpoint(@media-property, @value, @before-styles, @after-styles) when (@media-property = height) {
  @media (max-height: @value - 1px) {
    @before-styles();
  }

  @media (min-height: @value) {
    @after-styles();
  }
}

//
// Extral small: xs
//
.mx__media-only-xs(@styles) {
  @media (max-width: @ui--responsive-breakpoints[sm-min] - 1px) {
    @styles();
  }
}

//
// Small: sm
//
.mx__media-breakpoint-sm(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--responsive-breakpoints[sm-min], @before-styles, @after-styles);
}

.mx__media-only-sm(@styles) {
  @media (min-width: @ui--responsive-breakpoints[sm-min]) and (max-width: @ui--responsive-breakpoints[md-min] - 1px) {
    @styles();
  }
}

.mx__media-min-sm(@styles) {
  @media (min-width: @ui--responsive-breakpoints[sm-min]) {
    @styles();
  }
}

.mx__media-max-sm(@styles) {
  @media (max-width: @ui--responsive-breakpoints[md-min] - 1px) {
    @styles();
  }
}

//
// Medium: md
//
.mx__media-breakpoint-md(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--responsive-breakpoints[md-min], @before-styles, @after-styles);
}

.mx__media-only-md(@styles) {
  @media (min-width: @ui--responsive-breakpoints[md-min]) and (max-width: @ui--responsive-breakpoints[lg-min] - 1px) {
    @styles();
  }
}

.mx__media-min-md(@styles) {
  @media (min-width: @ui--responsive-breakpoints[md-min]) {
    @styles();
  }
}

.mx__media-max-md(@styles) {
  @media (max-width: @ui--responsive-breakpoints[lg-min] - 1px) {
    @styles();
  }
}

//
// Large: lg
//
.mx__media-breakpoint-lg(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--responsive-breakpoints[lg-min], @before-styles, @after-styles);
}

.mx__media-only-lg(@styles) {
  @media (min-width: @ui--responsive-breakpoints[lg-min]) and (max-width: @ui--responsive-breakpoints[xl-min] - 1px) {
    @styles();
  }
}

.mx__media-min-lg(@styles) {
  @media (min-width: @ui--responsive-breakpoints[lg-min]) {
    @styles();
  }
}

.mx__media-max-lg(@styles) {
  @media (max-width: @ui--responsive-breakpoints[xl-min] - 1px) {
    @styles();
  }
}

//
// Extra large: xl
//
.mx__media-breakpoint-xl(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--responsive-breakpoints[xl-min], @before-styles, @after-styles);
}

.mx__media-only-xl(@styles) {
  @media (min-width: @ui--responsive-breakpoints[xl-min]) {
    @styles();
  }
}

//
// Systematic application mixins
//

//
// Simple responsive property
//
.mx__responsive-property(@ruleset-generator-or-property, @values) {
  @ruleset-generator: if(
    isruleset(@ruleset-generator-or-property),
    @ruleset-generator-or-property,
    {
      @{ruleset-generator-or-property}: @responsive-value;
    }
  );

  & when not (@values[xl] = false) {
    @responsive-value: @values[xl];

    .mx__media-only-xl(@ruleset-generator);
  }

  & when not (@values[lg] = false) {
    @responsive-value: @values[lg];

    .mx__media-only-lg(@ruleset-generator);
  }

  & when not (@values[md] = false) {
    @responsive-value: @values[md];

    .mx__media-only-md(@ruleset-generator);
  }

  & when not (@values[sm] = false) {
    @responsive-value: @values[sm];

    .mx__media-only-sm(@ruleset-generator);
  }

  & when not (@values[xs] = false) {
    @responsive-value: @values[xs];

    .mx__media-only-xs(@ruleset-generator);
  }
}

//
// Grouped responsive property
//
.mx__responsive-group-property(@ruleset-generator-or-property, @values) {
  @ruleset-generator: if(
    isruleset(@ruleset-generator-or-property),
    @ruleset-generator-or-property,
    {
      @{ruleset-generator-or-property}: @responsive-group-value;
    }
  );

  & when not (@values[lg-xl] = false) {
    @responsive-group-value: @values[lg-xl];

    .mx__media-min-lg(@ruleset-generator);
  }

  & when not (@values[md] = false) {
    @responsive-group-value: @values[md];

    .mx__media-only-md(@ruleset-generator);
  }

  & when not (@values[xs-sm] = false) {
    @responsive-group-value: @values[xs-sm];

    .mx__media-max-sm(@ruleset-generator);
  }
}
