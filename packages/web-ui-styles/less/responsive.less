@import './responsive/private.less';

@ui--xl-min-width: 1400px;

@ui--lg-max-width: @ui--xl-min-width - 1px;
@ui--lg-min-width: 992px;

@ui--md-max-width: @ui--lg-min-width - 1px;
@ui--md-min-width: 768px;

@ui--sm-max-width: @ui--md-min-width - 1px;
@ui--sm-min-width: 576px;

@ui--xs-max-width: @ui--sm-min-width - 1px;
@ui--xs-min-width: 0px;

/**
 * Breakpoint mixins
 */
.mx__media-breakpoint(@property, @value, @before-styles, @after-styles) when (@property = width) {
  @media (max-width: @value - 1px) {
    @before-styles();
  }

  @media (min-width: @value) {
    @after-styles();
  }
}

.mx__media-breakpoint(@property, @value, @before-styles, @after-styles) when (@property = height) {
  @media (max-height: @value - 1px) {
    @before-styles();
  }

  @media (min-height: @value) {
    @after-styles();
  }
}

/**
 * Extral small: xs
 */
.mx__media-only-xs(@styles) {
  @media (max-width: @ui--xs-max-width) {
    @styles();
  }
}

/**
 * Small: sm
 */
.mx__media-breakpoint-sm(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--sm-min-width, @before-styles, @after-styles);
}

.mx__media-only-sm(@styles) {
  @media (min-width: @ui--sm-min-width) and (max-width: @ui--sm-max-width) {
    @styles();
  }
}

.mx__media-min-sm(@styles) {
  @media (min-width: @ui--sm-min-width) {
    @styles();
  }
}

.mx__media-max-sm(@styles) {
  @media (max-width: @ui--sm-max-width) {
    @styles();
  }
}

/**
 * Medium: md
 */
.mx__media-breakpoint-md(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--md-min-width, @before-styles, @after-styles);
}

.mx__media-only-md(@styles) {
  @media (min-width: @ui--md-min-width) and (max-width: @ui--md-max-width) {
    @styles();
  }
}

.mx__media-min-md(@styles) {
  @media (min-width: @ui--md-min-width) {
    @styles();
  }
}

.mx__media-max-md(@styles) {
  @media (max-width: @ui--md-max-width) {
    @styles();
  }
}

/**
 * Large: lg
 */
.mx__media-breakpoint-lg(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--lg-min-width, @before-styles, @after-styles);
}

.mx__media-only-lg(@styles) {
  @media (min-width: @ui--lg-min-width) and (max-width: @ui--lg-max-width) {
    @styles();
  }
}

.mx__media-min-lg(@styles) {
  @media (min-width: @ui--lg-min-width) {
    @styles();
  }
}

.mx__media-max-lg(@styles) {
  @media (max-width: @ui--lg-max-width) {
    @styles();
  }
}

/**
 * Extra large: xl
 */
.mx__media-breakpoint-xl(@before-styles, @after-styles) {
  .mx__media-breakpoint(width, @ui--xl-min-width, @before-styles, @after-styles);
}

.mx__media-only-xl(@styles) {
  @media (min-width: @ui--xl-min-width) {
    @styles();
  }
}

/**
 * Systematic application mixins
 */

/**
 * Simple responsive property
 */
.mx__responsive-property(@property, @values) {

}

.mx__responsive-property(@property, @values) when not (@values[xl] = false) {
  .mx__media-only-xl({
    @{property}: @values[xl];
  });
}

.mx__responsive-property(@property, @values) when not (@values[lg] = false) {
  .mx__media-only-lg({
    @{property}: @values[lg];
  });
}

.mx__responsive-property(@property, @values) when not (@values[md] = false) {
  .mx__media-only-md({
    @{property}: @values[md];
  });
}

.mx__responsive-property(@property, @values) when not (@values[sm] = false) {
  .mx__media-only-sm({
    @{property}: @values[sm];
  });
}

.mx__responsive-property(@property, @values) when not (@values[xs] = false) {
  .mx__media-only-xs({
    @{property}: @values[xs];
  });
}
