@import './util/private.less';

/**
 * Empty ruleset and mixin
 */
@ui--util-noop: {};
.mx__util-noop() {}

/**
 * Helps setup immediate sibling relationships by
 * establishing situations between:
 * - reference-after-itself
 * - reference-after-other
 * - other-after-reference
 */
// .mx__util-immediate-sibling-relationships(
//   @reference-selector,
//   @reference-after-itself,
//   @reference-after-other,
//   @other-after-reference) {

//   /**
//    * Reference after another occurrence of Reference
//    */
//   > @{reference-selector} + @{reference-selector} {
//     @reference-after-itself();
//   }

//   /**
//    * Reference after Other
//    */
//   > *:not(@{reference-selector}) + @{reference-selector} {
//     @reference-after-other();
//   }

//   /**
//    * Other after Reference
//    */
//   > @{reference-selector} + *:not(@{reference-selector}) {
//     @other-after-reference();
//   }
// }

/**
 * Applies the @ruleset to the element when it is a descendant
 * of any element corresponding to the @ancestor-selector
 */
.mx__util-apply-ruleset-when-descendant-of(@ancestor-selector, @ruleset) {
  @{ancestor-selector} & {
    @ruleset();
  }
}

/**
 * Separation between items
 */
.mx__util-distance-between-items(
  @orientation,
  @distance) when (@orientation = horizontal) {
  margin-right: @distance;

  &:last-child {
    margin-right: 0;
  }
}

.mx__util-distance-between-items(
  @orientation,
  @distance) when (@orientation = vertical) {
  margin-bottom: @distance;

  &:last-child {
    margin-bottom: 0;
  }
}

/**
 * Reset a direction-conditioned property:
 * margin, padding, border, border-radius
 */
.mx__util-reset-when-first-or-last(
  @property,
  @orientation) when (@orientation = horizontal) {

  &:first-child {
    @{property}-left: 0;
  }

  &:last-child {
    @{property}-right: 0;
  }
}

.mx__util-reset-when-first-or-last(
  @property,
  @orientation) when (@orientation = vertical) {

  &:first-child {
    @{property}-top: 0;
  }

  &:last-child {
    @{property}-bottom: 0;
  }
}

/**
 * Tries to extract the property's value
 * from the list at specified index.
 * If the list is shorter, uses the last value as default.
 */
.mx__util-extract-default-to-last(@property, @list, @index) {
  @{property}: if(
    length(@list) >= @index,
    extract(@list, @index),
    extract(@list, length(@list))
  );
}

.mx__util-apply-property-or-ruleset(@property-or-ruleset, @value) {
  & when (isruleset(@property-or-ruleset)) {
    @property-or-ruleset();
  }

  & when (isstring(@property-or-ruleset)) {
    @{property}: @value;
  }
}
