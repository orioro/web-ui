// .__vertical-spacing-system-apply-distance(@__distance) {
//   & when (get-unit(@__distance) = '') {
//     .mx__spacing-m-top(@__distance);
//   }

//   & when not (get-unit(@__distance) = '') {
//     margin-top: @__distance;
//   }
// }

// .__vertical-spacing-system-apply-distance(@__distance) {
//   @no-unit: isunit(@__distance, '');

//   --unit: get-unit(@__distance);
//   --distance: @__distance;
//   --no-unit: @no-unit;

//   & when not (@no-unit) {
//     margin-top: @__distance;
//   }

//   & when (@no-unit) {
//     --inside-no-unit: true;
//     // background-color: green;
//     .mx__spacing-m-top(@__distance);
//   }
// }

.mx__vertical-spacing-system(
  @__default-distance,
  @__distances) {

  > * {
    //
    // The system uses only top margins for controlling spacing,
    // thus bottom margins are annullated
    //
    margin-bottom: 0;
  }

  & when (isunit(@__default-distance, '')) {
    > * + * {
      .mx__spacing-m-top(@__default-distance);
    }
  }

  & when not (isunit(@__default-distance, '')) {
    margin-top: @__default-distance;
  }

  each(@__distances, {
    .mx__vertical-spacing-system-item(extract(@value, 1), {
      from-other: extract(@value, 2);
      to-other: extract(@value, 3);
      from-itself: extract(@value, 4);
    });
  });
}

/**
 * Given a reference selector, establish spacing relationships
 */
.mx__vertical-spacing-system-item(@__reference-selector, @__item-distances) {
  /**
   * Reference after Other
   */
  > *:not(@{__reference-selector}) + @{__reference-selector} {
    & when (isunit(@__item-distances[from-other], '')) {
      .mx__spacing-m-top(@__item-distances[from-other]);
    }

    & when not (isunit(@__item-distances[from-other], '')) {
      margin-top: @__item-distances[from-other];
    }
  }

  /**
   * Other after Reference
   */
  > @{__reference-selector} + *:not(@{__reference-selector}) {
    & when (isunit(@__item-distances[to-other], '')) {
      .mx__spacing-m-top(@__item-distances[to-other]);
    }

    & when not (isunit(@__item-distances[to-other], '')) {
      margin-top: @__item-distances[to-other];
    }
  }

  /**
   * Reference after another occurrence of Reference
   */
  > @{__reference-selector} + @{__reference-selector} {
    & when (isunit(@__item-distances[from-itself], '')) {
      .mx__spacing-m-top(@__item-distances[from-itself]);
    }

    & when not (isunit(@__item-distances[from-itself], '')) {
      margin-top: @__item-distances[from-itself];
    }
  }
}
